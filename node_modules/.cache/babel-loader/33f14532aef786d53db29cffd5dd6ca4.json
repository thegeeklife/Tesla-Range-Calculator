{"ast":null,"code":"var _jsxFileName = \"/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js\";\nimport React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice';\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport { getModelData } from '../services/BatteryService';\nimport TeslaCounter from '../components/TeslaCounter/TeslaCounter';\nimport TeslaClimate from '../components/TeslaClimate/TeslaClimate';\n\nclass TeslaBattery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateStats = (models, value) => {\n      const dataModels = getModelData();\n      return models.map(model => {\n        // ES6 Object destructuring Syntax,\n        // takes out required values and create references to them\n        const {\n          speed,\n          temperature,\n          climate,\n          wheels\n        } = value;\n        const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n        return {\n          model,\n          miles\n        };\n      });\n    };\n\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.updateCounterState = this.updateCounterState.bind(this);\n    this.handleChangeClimate = this.handleChangeClimate.bind(this);\n    this.state = {\n      carstats: [],\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    };\n  }\n\n  statsUpdate() {\n    const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this); // Fetch model info from BatteryService and calculate then update state\n\n    this.setState({\n      carstats: this.calculateStats(carModels, this.state.config)\n    });\n  }\n\n  componentDidMount() {\n    this.statsUpdate();\n  }\n\n  updateCounterState(title, newValue) {\n    const config = { ...this.state.config\n    }; // update config state with new value\n\n    title === 'Speed' ? config['speed'] = newValue : config['temperature'] = newValue; // update our state\n\n    this.setState({\n      config\n    });\n  }\n\n  increment(e, title) {\n    e.preventDefault();\n    let currentValue, maxValue, step;\n    const {\n      speed,\n      temperature\n    } = this.props.counterDefaultVal;\n\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      maxValue = speed.max;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      maxValue = temperature.max;\n      step = temperature.step;\n    }\n\n    if (currentValue < maxValue) {\n      const newValue = currentValue + step;\n      this.updateCounterState(title, newValue);\n    }\n  }\n\n  decrement(e, title) {\n    e.preventDefault();\n    let currentValue, minValue, step;\n    const {\n      speed,\n      temperature\n    } = this.props.counterDefaultVal;\n\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      minValue = speed.min;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      minValue = temperature.min;\n      step = temperature.step;\n    }\n\n    if (currentValue > minValue) {\n      const newValue = currentValue - step;\n      this.updateCounterState(title, newValue);\n    }\n  }\n\n  handleChangeClimate() {\n    const config = { ...this.state.config\n    };\n    config['climate'] = !this.state.config.climate;\n    this.setState({\n      config\n    });\n  }\n\n  render() {\n    const {\n      config,\n      carstats\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"tesla-battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Range Per Charge\"), /*#__PURE__*/React.createElement(TeslaCar, {\n      wheelsize: config.wheels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TeslaStats, {\n      carstats: carstats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tesla-controls cf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TeslaCounter, {\n      currentValue: this.state.config.speed,\n      initValues: this.props.counterDefaultVal.speed,\n      increment: this.increment,\n      decrement: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tesla-climate-container cf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TeslaCounter, {\n      currentValue: this.state.config.temperature,\n      initValues: this.props.counterDefaultVal.temperature,\n      increment: this.increment,\n      decrement: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(TeslaClimate, {\n      value: this.state.config.climate,\n      limit: this.state.config.temperature > 10,\n      handleChangeClimate: this.handleChangeClimate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(TeslaNotice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default TeslaBattery;","map":{"version":3,"sources":["/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js"],"names":["React","TeslaNotice","TeslaCar","TeslaStats","getModelData","TeslaCounter","TeslaClimate","TeslaBattery","Component","constructor","props","calculateStats","models","value","dataModels","map","model","speed","temperature","climate","wheels","miles","bind","statsUpdate","increment","decrement","updateCounterState","handleChangeClimate","state","carstats","config","carModels","setState","componentDidMount","title","newValue","e","preventDefault","currentValue","maxValue","step","counterDefaultVal","max","minValue","min","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice'\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport { getModelData } from '../services/BatteryService';\nimport TeslaCounter from '../components/TeslaCounter/TeslaCounter'\nimport TeslaClimate from '../components/TeslaClimate/TeslaClimate'\n\nclass TeslaBattery extends React.Component {\n    \n  constructor(props) {\n    super(props);\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.updateCounterState = this.updateCounterState.bind(this);\n    this.handleChangeClimate = this.handleChangeClimate.bind(this);\n    this.state = {\n      carstats: [],\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    }\n  }\n    \n    calculateStats = (models, value) => {\n        const dataModels = getModelData();\n        return models.map(model => {\n          // ES6 Object destructuring Syntax,\n          // takes out required values and create references to them\n          const { speed, temperature, climate, wheels } = value;\n          const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n          return {\n            model,\n            miles\n          };\n        });\n      }\n        \n      statsUpdate() {\n        const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n        this.calculateStats = this.calculateStats.bind(this);\n        this.statsUpdate = this.statsUpdate.bind(this);\n\n        // Fetch model info from BatteryService and calculate then update state\n        this.setState({\n          carstats: this.calculateStats(carModels, this.state.config)\n        })  \n      }\n        \n      componentDidMount() {\n        this.statsUpdate(); \n      }\n\n      updateCounterState(title, newValue) {\n        const config = { ...this.state.config };\n        // update config state with new value\n        title === 'Speed' ? config['speed'] = newValue : config['temperature'] = newValue;\n        // update our state\n        this.setState({ config });\n      }\n      increment(e, title) {\n        e.preventDefault();\n        let currentValue, maxValue, step;\n        const { speed, temperature } = this.props.counterDefaultVal;\n        if (title === 'Speed') {\n          currentValue = this.state.config.speed;\n          maxValue = speed.max;\n          step = speed.step;\n        } else {\n          currentValue = this.state.config.temperature;\n          maxValue = temperature.max;\n          step = temperature.step;\n        }\n        if (currentValue < maxValue) {\n          const newValue = currentValue + step;\n          this.updateCounterState(title, newValue);\n        }\n      }\n      decrement(e, title) {\n        e.preventDefault();\n        let currentValue, minValue, step;\n        const { speed, temperature } = this.props.counterDefaultVal;\n        if (title === 'Speed') {\n          currentValue = this.state.config.speed;\n          minValue = speed.min;\n          step = speed.step;\n        } else {\n          currentValue = this.state.config.temperature;\n          minValue = temperature.min;\n          step = temperature.step;\n        }\n        if (currentValue > minValue) {\n          const newValue = currentValue - step;\n          this.updateCounterState(title, newValue);\n        }\n      }  \n      handleChangeClimate() {\n        const config = {...this.state.config};\n        config['climate'] = !this.state.config.climate;\n        this.setState({ config });\n      }\n      render() {\n        const { config, carstats } = this.state;\t\n        return (\n            <form className=\"tesla-battery\">\n              <h1>Range Per Charge</h1>\n              <TeslaCar wheelsize={config.wheels} />\n              <TeslaStats carstats={carstats} />\n              <div className=\"tesla-controls cf\">\n                <TeslaCounter\n                  currentValue={this.state.config.speed}\n                  initValues={this.props.counterDefaultVal.speed}\n                  increment={this.increment}\n                  decrement={this.decrement}\n                />\n                <div className=\"tesla-climate-container cf\">\n                  <TeslaCounter\n                    currentValue={this.state.config.temperature}\n                    initValues={this.props.counterDefaultVal.temperature}\n                    increment={this.increment}\n                    decrement={this.decrement}\n                  />\n                  <TeslaClimate\n                  value={this.state.config.climate}\n                  limit={this.state.config.temperature > 10}\n                  handleChangeClimate={this.handleChangeClimate}\n                  /> \n                </div>\n              </div>\n              <TeslaNotice />\n          </form>\n        )\n      }\n}\nexport default TeslaBattery;"]},"metadata":{},"sourceType":"module"}