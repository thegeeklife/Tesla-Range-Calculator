{"ast":null,"code":"var _jsxFileName = \"/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js\";\nimport React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice';\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport { getModelData } from '../services/BatteryService';\nimport { checkPropTypes } from 'prop-types';\n\nclass TeslaBattery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateStats = (models, value) => {\n      const dataModels = getModelData();\n      return models.map(model => {\n        // ES6 Object destructuring Syntax,\n        // takes out required values and create references to them\n        const {\n          speed,\n          temperature,\n          climate,\n          wheels\n        } = value;\n        const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n        return {\n          model,\n          miles\n        };\n      });\n    };\n\n    this.state = {\n      carstats: PropTypes.array,\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    };\n  }\n\n  statsUpdate() {\n    const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this); // Fetch model info from BatteryService and calculate then update state\n\n    this.setState({\n      carstats: this.calculateStats(carModels, this.state.config)\n    });\n  }\n\n  componentDidMount() {\n    this.statsUpdate();\n  }\n\n  render() {\n    const {\n      config\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"tesla-battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Range Per Charge\"), /*#__PURE__*/React.createElement(TeslaCar, {\n      wheelsize: config.wheels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TeslaStats, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TeslaNotice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default TeslaBattery;","map":{"version":3,"sources":["/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js"],"names":["React","TeslaNotice","TeslaCar","TeslaStats","getModelData","checkPropTypes","TeslaBattery","Component","constructor","props","calculateStats","models","value","dataModels","map","model","speed","temperature","climate","wheels","miles","state","carstats","PropTypes","array","config","statsUpdate","carModels","bind","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAEvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,cAbmB,GAaF,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChC,YAAMC,UAAU,GAAGT,YAAY,EAA/B;AACA,aAAOO,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACzB;AACA;AACA,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA,WAAT;AAAsBC,UAAAA,OAAtB;AAA+BC,UAAAA;AAA/B,YAA0CP,KAAhD;AACA,cAAMQ,KAAK,GAAGP,UAAU,CAACE,KAAD,CAAV,CAAkBI,MAAlB,EAA0BD,OAAO,GAAG,IAAH,GAAU,KAA3C,EAAkDF,KAAlD,CAAwDA,KAAxD,EAA+DC,WAA/D,CAAd;AACA,eAAO;AACLF,UAAAA,KADK;AAELK,UAAAA;AAFK,SAAP;AAID,OATM,CAAP;AAUD,KAzBgB;;AAEf,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEC,SAAS,CAACC,KADT;AAETC,MAAAA,MAAM,EAAE;AACNT,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,WAAW,EAAE,EAFP;AAGNC,QAAAA,OAAO,EAAE,IAHH;AAINC,QAAAA,MAAM,EAAE;AAJF;AAFC,KAAb;AASH;;AAgBCO,EAAAA,WAAW,GAAG;AACZ,UAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,OAAlC,CAAlB;AACA,SAAKjB,cAAL,GAAsB,KAAKA,cAAL,CAAoBkB,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKF,WAAL,GAAmB,KAAKA,WAAL,CAAiBE,IAAjB,CAAsB,IAAtB,CAAnB,CAHY,CAKZ;;AACA,SAAKC,QAAL,CAAc;AACZP,MAAAA,QAAQ,EAAE,KAAKZ,cAAL,CAAoBiB,SAApB,EAA+B,KAAKN,KAAL,CAAWI,MAA1C;AADE,KAAd;AAGD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,WAAL;AACD;;AAEHK,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEN,MAAAA;AAAF,QAAa,KAAKJ,KAAxB;AACA,wBACI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEI,MAAM,CAACN,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAtDsC;;AAwD3C,eAAeb,YAAf","sourcesContent":["import React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice'\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport { getModelData } from '../services/BatteryService';\nimport { checkPropTypes } from 'prop-types';\n\nclass TeslaBattery extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n          carstats: PropTypes.array,\n            config: {\n              speed: 55,\n              temperature: 20,\n              climate: true,\n              wheels: 19\n            }\n          }\n    }\n    \n    calculateStats = (models, value) => {\n        const dataModels = getModelData();\n        return models.map(model => {\n          // ES6 Object destructuring Syntax,\n          // takes out required values and create references to them\n          const { speed, temperature, climate, wheels } = value;\n          const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n          return {\n            model,\n            miles\n          };\n        });\n      }\n        \n      statsUpdate() {\n        const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n        this.calculateStats = this.calculateStats.bind(this);\n        this.statsUpdate = this.statsUpdate.bind(this);\n\n        // Fetch model info from BatteryService and calculate then update state\n        this.setState({\n          carstats: this.calculateStats(carModels, this.state.config)\n        })  \n      }\n        \n      componentDidMount() {\n        this.statsUpdate(); \n      }\n\n    render(){\n        const { config } = this.state;\n        return (\n            <form className=\"tesla-battery\">\n                <h1>Range Per Charge</h1>\n                <TeslaCar wheelsize={config.wheels}/>\n                <TeslaStats />\n                <TeslaNotice />\n            </form>\n        )\n    }\n}\nexport default TeslaBattery;"]},"metadata":{},"sourceType":"module"}