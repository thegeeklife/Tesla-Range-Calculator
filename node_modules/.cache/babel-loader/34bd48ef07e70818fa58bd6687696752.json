{"ast":null,"code":"var _jsxFileName = \"/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js\";\nimport React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice';\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport TeslaCounter from '../components/TeslaCounter/TeslaCounter';\nimport TeslaClimate from '../components/TeslaClimate/TeslaClimate';\nimport TeslaWheels from '../components/TeslaWheels/TeslaWheels';\nimport { getModelData } from '../services/BatteryService';\n\nclass TeslaBattery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateStats = (models, value) => {\n      const dataModels = getModelData();\n      return models.map(model => {\n        const {\n          speed,\n          temperature,\n          climate,\n          wheels\n        } = value;\n        const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n        return {\n          model,\n          miles\n        };\n      });\n    };\n\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.updateCounterState = this.updateCounterState.bind(this);\n    this.handleChangeClimate = this.handleChangeClimate.bind(this);\n    this.handleChangeWheels = this.handleChangeWheels.bind(this);\n    this.state = {\n      carstats: [],\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    };\n  }\n\n  statsUpdate() {\n    const carModels = ['60', '60D', '75', '75D', '90D', 'P100D']; // Fetch model info from BatteryService and calculate then update state\n\n    this.setState({\n      carstats: this.calculateStats(carModels, this.state.config)\n    });\n  }\n\n  componentDidMount() {\n    this.statsUpdate();\n  }\n\n  updateCounterState(title, newValue) {\n    const config = { ...this.state.config\n    }; // update config state with new value\n\n    title === 'Speed' ? config['speed'] = newValue : config['temperature'] = newValue; // update our state\n\n    this.setState({\n      config\n    }, () => {\n      this.statsUpdate();\n    });\n  }\n\n  increment(e, title) {\n    e.preventDefault();\n    let currentValue, maxValue, step;\n    const {\n      speed,\n      temperature\n    } = this.props.counterDefaultVal;\n\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      maxValue = speed.max;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      maxValue = temperature.max;\n      step = temperature.step;\n    }\n\n    if (currentValue < maxValue) {\n      const newValue = currentValue + step;\n      this.updateCounterState(title, newValue);\n    }\n  }\n\n  decrement(e, title) {\n    e.preventDefault();\n    let currentValue, minValue, step;\n    const {\n      speed,\n      temperature\n    } = this.props.counterDefaultVal;\n\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      minValue = speed.min;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      minValue = temperature.min;\n      step = temperature.step;\n    }\n\n    if (currentValue > minValue) {\n      const newValue = currentValue - step;\n      this.updateCounterState(title, newValue);\n    }\n  } // handle aircon & heating click event handler\n\n\n  handleChangeClimate() {\n    const config = { ...this.state.config\n    };\n    config['climate'] = !this.state.config.climate;\n    this.setState({\n      config\n    }, () => {\n      this.statsUpdate();\n    });\n  } // handle Wheels click event handler\n\n\n  handleChangeWheels(size) {\n    const config = { ...this.state.config\n    };\n    config['wheels'] = size;\n    this.setState({\n      config\n    }, () => {\n      this.statsUpdate();\n    });\n  }\n\n  render() {\n    const {\n      config,\n      carstats\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"tesla-battery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Range Per Charge\"), /*#__PURE__*/React.createElement(TeslaCar, {\n      wheelsize: config.wheels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TeslaStats, {\n      carstats: carstats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tesla-controls cf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TeslaCounter, {\n      currentValue: this.state.config.speed,\n      initValues: this.props.counterDefaultVal.speed,\n      increment: this.increment,\n      decrement: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tesla-climate-container cf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TeslaCounter, {\n      currentValue: this.state.config.temperature,\n      initValues: this.props.counterDefaultVal.temperature,\n      increment: this.increment,\n      decrement: this.decrement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TeslaClimate, {\n      value: this.state.config.climate,\n      limit: this.state.config.temperature > 10,\n      handleChangeClimate: this.handleChangeClimate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TeslaWheels, {\n      value: this.state.config.wheels,\n      handleChangeWheels: this.handleChangeWheels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(TeslaNotice, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default TeslaBattery;","map":{"version":3,"sources":["/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js"],"names":["React","TeslaNotice","TeslaCar","TeslaStats","TeslaCounter","TeslaClimate","TeslaWheels","getModelData","TeslaBattery","Component","constructor","props","calculateStats","models","value","dataModels","map","model","speed","temperature","climate","wheels","miles","bind","statsUpdate","increment","decrement","updateCounterState","handleChangeClimate","handleChangeWheels","state","carstats","config","carModels","setState","componentDidMount","title","newValue","e","preventDefault","currentValue","maxValue","step","counterDefaultVal","max","minValue","min","size","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice';\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport TeslaCounter from '../components/TeslaCounter/TeslaCounter';\nimport TeslaClimate from '../components/TeslaClimate/TeslaClimate';\nimport TeslaWheels from '../components/TeslaWheels/TeslaWheels';\nimport { getModelData } from '../services/BatteryService';\n\nclass TeslaBattery extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.updateCounterState = this.updateCounterState.bind(this);\n    this.handleChangeClimate = this.handleChangeClimate.bind(this);\n    this.handleChangeWheels = this.handleChangeWheels.bind(this);\n\n    this.state = {\n      carstats: [],\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    }\n  }\n\n  calculateStats = (models, value) => {\n    const dataModels = getModelData();\n    return models.map(model => {\n      const { speed, temperature, climate, wheels } = value;\n      const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n      return {\n        model,\n        miles\n      };\n    });\n  }\n\n  statsUpdate() {\n    const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n    // Fetch model info from BatteryService and calculate then update state\n    this.setState({\n      carstats: this.calculateStats(carModels, this.state.config)\n    })\n  }\n\n  componentDidMount() {\n    this.statsUpdate();\n  }\n\n  updateCounterState(title, newValue) {\n    const config = { ...this.state.config };\n    // update config state with new value\n    title === 'Speed' ? config['speed'] = newValue : config['temperature'] = newValue;\n    // update our state\n    this.setState({ config }, () => {this.statsUpdate()});\n  }\n\n  increment(e, title) {\n    e.preventDefault();\n    let currentValue, maxValue, step;\n    const { speed, temperature } = this.props.counterDefaultVal;\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      maxValue = speed.max;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      maxValue = temperature.max;\n      step = temperature.step;\n    }\n\n    if (currentValue < maxValue) {\n      const newValue = currentValue + step;\n      this.updateCounterState(title, newValue);\n    }\n  }\n\n  decrement(e, title) {\n    e.preventDefault();\n    let currentValue, minValue, step;\n    const { speed, temperature } = this.props.counterDefaultVal;\n    if (title === 'Speed') {\n      currentValue = this.state.config.speed;\n      minValue = speed.min;\n      step = speed.step;\n    } else {\n      currentValue = this.state.config.temperature;\n      minValue = temperature.min;\n      step = temperature.step;\n    }\n\n    if (currentValue > minValue) {\n      const newValue = currentValue - step;\n      this.updateCounterState(title, newValue);\n    }\n  }\n\n  // handle aircon & heating click event handler\n  handleChangeClimate() {\n    const config = {...this.state.config};\n    config['climate'] = !this.state.config.climate;\n    this.setState({ config }, () => {this.statsUpdate()});\n  }\n\n  // handle Wheels click event handler\n  handleChangeWheels(size) {\n    const config = {...this.state.config};\n    config['wheels'] = size;\n    this.setState({ config }, () => {this.statsUpdate()});\n  }  \n\n  render() {    \n    const { config, carstats } = this.state;\n    return (\n      <form className=\"tesla-battery\">\n        <h1>Range Per Charge</h1>\n        <TeslaCar wheelsize={config.wheels} />\n        <TeslaStats carstats={carstats} />\n        <div className=\"tesla-controls cf\">\n          <TeslaCounter\n            currentValue={this.state.config.speed}\n            initValues={this.props.counterDefaultVal.speed}\n            increment={this.increment}\n            decrement={this.decrement}\n          />\n          <div className=\"tesla-climate-container cf\">\n            <TeslaCounter\n              currentValue={this.state.config.temperature}\n              initValues={this.props.counterDefaultVal.temperature}\n              increment={this.increment}\n              decrement={this.decrement}\n            />\n            <TeslaClimate\n              value={this.state.config.climate}\n              limit={this.state.config.temperature > 10}\n              handleChangeClimate={this.handleChangeClimate}\n            />\n          </div>\n          <TeslaWheels\n            value={this.state.config.wheels}\n            handleChangeWheels={this.handleChangeWheels}\n          />\n        </div>\n        <TeslaNotice />\n      </form>\n    )\n  }\n}\n\nexport default TeslaBattery;"]},"metadata":{},"sourceType":"module"}