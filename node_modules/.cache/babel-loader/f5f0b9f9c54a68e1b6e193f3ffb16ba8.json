{"ast":null,"code":"import React from'react';import'./TeslaClimate.css';var TeslaClimate=function TeslaClimate(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"tesla-climate\"},/*#__PURE__*/React.createElement(\"label\",{className:\"tesla-climate__item \".concat(props.value?'tesla-climate__item--active':'',\"  \").concat(!props.limit?'tesla-heat':'')},/*#__PURE__*/React.createElement(\"p\",null,props.limit?'ac':'heat',\" \",props.value?'on':'off'),/*#__PURE__*/React.createElement(\"i\",{className:\"tesla-climate__icon\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",name:\"climate\",checked:props.value,onChange:function onChange(){props.handleChangeClimate();}})));};export default TeslaClimate;","map":{"version":3,"sources":["/Users/subi/projects/react-tesla-range-calculator/src/components/TeslaClimate/TeslaClimate.js"],"names":["React","TeslaClimate","props","value","limit","handleChangeClimate"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,oBAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,qBACjB,2BAAK,SAAS,CAAC,eAAf,eACE,6BACA,SAAS,+BAAyBA,KAAK,CAACC,KAAN,CAAc,6BAAd,CAA8C,EAAvE,cAA+E,CAACD,KAAK,CAACE,KAAP,CAAe,YAAf,CAA4B,EAA3G,CADT,eAGE,6BAAIF,KAAK,CAACE,KAAN,CAAc,IAAd,CAAqB,MAAzB,KAAkCF,KAAK,CAACC,KAAN,CAAc,IAAd,CAAqB,KAAvD,CAHF,cAIE,yBAAG,SAAS,CAAC,qBAAb,EAJF,cAKE,6BACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,SAFP,CAGE,OAAO,CAAED,KAAK,CAACC,KAHjB,CAIE,QAAQ,CAAE,mBAAM,CAACD,KAAK,CAACG,mBAAN,GAA4B,CAJ/C,EALF,CADF,CADiB,EAArB,CAqBE,cAAeJ,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TeslaClimate.css';\n\nconst TeslaClimate = (props) => (\n    <div className=\"tesla-climate\">\n      <label\n      className={`tesla-climate__item ${props.value ? 'tesla-climate__item--active' : '' }  ${!props.limit ? 'tesla-heat':''}`}\n    >\n        <p>{props.limit ? 'ac' : 'heat'} {props.value ? 'on' : 'off'}</p>\n        <i className=\"tesla-climate__icon\"></i>\n        <input\n          type=\"checkbox\"\n          name=\"climate\"\n          checked={props.value}\n          onChange={() => {props.handleChangeClimate()}}\n        />\n      </label>\n    </div>\n  );\n  TeslaClimate.propTypes = {\n    value: PropTypes.bool,\n    limit: PropTypes.bool,\n    handleChangeClimate: PropTypes.func\n  }\n  export default TeslaClimate;"]},"metadata":{},"sourceType":"module"}