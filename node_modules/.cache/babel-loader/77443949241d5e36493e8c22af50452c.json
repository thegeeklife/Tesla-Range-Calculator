{"ast":null,"code":"import _objectSpread from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/subi/projects/react-tesla-range-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./TeslaBattery.css';import TeslaNotice from'../components/TeslaNotice/TeslaNotice';import TeslaCar from'../components/TeslaCar/TeslaCar';import TeslaStats from'../components/TeslaStats/TeslaStats';import{getModelData}from'../services/BatteryService';import TeslaCounter from'../components/TeslaCounter/TeslaCounter';import TeslaClimate from'../components/TeslaClimate/TeslaClimate';import TeslaWheels from'../components/TeslaWheels/TeslaWheels';var TeslaBattery=/*#__PURE__*/function(_React$Component){_inherits(TeslaBattery,_React$Component);var _super=_createSuper(TeslaBattery);function TeslaBattery(props){var _this;_classCallCheck(this,TeslaBattery);_this=_super.call(this,props);_this.calculateStats=function(models,value){var dataModels=getModelData();return models.map(function(model){// ES6 Object destructuring Syntax,\n// takes out required values and create references to them\nvar speed=value.speed,temperature=value.temperature,climate=value.climate,wheels=value.wheels;var miles=dataModels[model][wheels][climate?'on':'off'].speed[speed][temperature];return{model:model,miles:miles};});};_this.calculateStats=_this.calculateStats.bind(_assertThisInitialized(_this));_this.statsUpdate=_this.statsUpdate.bind(_assertThisInitialized(_this));_this.increment=_this.increment.bind(_assertThisInitialized(_this));_this.decrement=_this.decrement.bind(_assertThisInitialized(_this));_this.updateCounterState=_this.updateCounterState.bind(_assertThisInitialized(_this));_this.handleChangeClimate=_this.handleChangeClimate.bind(_assertThisInitialized(_this));_this.handleChangeWheels=_this.handleChangeWheels.bind(_assertThisInitialized(_this));_this.state={carstats:[],config:{speed:55,temperature:20,climate:true,wheels:19}};return _this;}_createClass(TeslaBattery,[{key:\"statsUpdate\",value:function statsUpdate(){var carModels=['60','60D','75','75D','90D','P100D'];// this.calculateStats = this.calculateStats.bind(this);\n// this.statsUpdate = this.statsUpdate.bind(this);\n// Fetch model info from BatteryService and calculate then update state\nthis.setState({carstats:this.calculateStats(carModels,this.state.config)});}},{key:\"componentDidMount\",value:function componentDidMount(){this.statsUpdate();}},{key:\"updateCounterState\",value:function updateCounterState(title,newValue){var _this2=this;var config=_objectSpread({},this.state.config);// update config state with new value\ntitle==='Speed'?config['speed']=newValue:config['temperature']=newValue;// update our state\nthis.setState({config:config},function(){_this2.statusUpdate();});}},{key:\"increment\",value:function increment(e,title){e.preventDefault();var currentValue,maxValue,step;var _this$props$counterDe=this.props.counterDefaultVal,speed=_this$props$counterDe.speed,temperature=_this$props$counterDe.temperature;if(title==='Speed'){currentValue=this.state.config.speed;maxValue=speed.max;step=speed.step;}else{currentValue=this.state.config.temperature;maxValue=temperature.max;step=temperature.step;}if(currentValue<maxValue){var newValue=currentValue+step;this.updateCounterState(title,newValue);}}},{key:\"decrement\",value:function decrement(e,title){e.preventDefault();var currentValue,minValue,step;var _this$props$counterDe2=this.props.counterDefaultVal,speed=_this$props$counterDe2.speed,temperature=_this$props$counterDe2.temperature;if(title==='Speed'){currentValue=this.state.config.speed;minValue=speed.min;step=speed.step;}else{currentValue=this.state.config.temperature;minValue=temperature.min;step=temperature.step;}if(currentValue>minValue){var newValue=currentValue-step;this.updateCounterState(title,newValue);}}//AC cool & heat\n},{key:\"handleChangeClimate\",value:function handleChangeClimate(){var config=_objectSpread({},this.state.config);config['climate']=!this.state.config.climate;this.setState({config:config});}//wheel type\n},{key:\"handleChangeWheels\",value:function handleChangeWheels(size){var config=_objectSpread({},this.state.config);config['wheels']=size;this.setState({config:config});}},{key:\"render\",value:function render(){var _this$state=this.state,config=_this$state.config,carstats=_this$state.carstats;return/*#__PURE__*/React.createElement(\"form\",{className:\"tesla-battery\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Range Per Charge\"),/*#__PURE__*/React.createElement(TeslaCar,{wheelsize:config.wheels}),/*#__PURE__*/React.createElement(TeslaStats,{carstats:carstats}),/*#__PURE__*/React.createElement(\"div\",{className:\"tesla-controls cf\"},/*#__PURE__*/React.createElement(TeslaCounter,{currentValue:this.state.config.speed,initValues:this.props.counterDefaultVal.speed,increment:this.increment,decrement:this.decrement}),/*#__PURE__*/React.createElement(\"div\",{className:\"tesla-climate-container cf\"},/*#__PURE__*/React.createElement(TeslaCounter,{currentValue:this.state.config.temperature,initValues:this.props.counterDefaultVal.temperature,increment:this.increment,decrement:this.decrement}),/*#__PURE__*/React.createElement(TeslaClimate,{value:this.state.config.climate,limit:this.state.config.temperature>10,handleChangeClimate:this.handleChangeClimate})),/*#__PURE__*/React.createElement(TeslaWheels,{value:this.state.config.wheels,handleChangeWheels:this.handleChangeWheels})),/*#__PURE__*/React.createElement(TeslaNotice,null));}}]);return TeslaBattery;}(React.Component);export default TeslaBattery;","map":{"version":3,"sources":["/Users/subi/projects/react-tesla-range-calculator/src/containers/TeslaBattery.js"],"names":["React","TeslaNotice","TeslaCar","TeslaStats","getModelData","TeslaCounter","TeslaClimate","TeslaWheels","TeslaBattery","props","calculateStats","models","value","dataModels","map","model","speed","temperature","climate","wheels","miles","bind","statsUpdate","increment","decrement","updateCounterState","handleChangeClimate","handleChangeWheels","state","carstats","config","carModels","setState","title","newValue","statusUpdate","e","preventDefault","currentValue","maxValue","step","counterDefaultVal","max","minValue","min","size","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './TeslaBattery.css';\nimport TeslaNotice from '../components/TeslaNotice/TeslaNotice'\nimport TeslaCar from '../components/TeslaCar/TeslaCar';\nimport TeslaStats from '../components/TeslaStats/TeslaStats';\nimport { getModelData } from '../services/BatteryService';\nimport TeslaCounter from '../components/TeslaCounter/TeslaCounter'\nimport TeslaClimate from '../components/TeslaClimate/TeslaClimate'\nimport TeslaWheels from '../components/TeslaWheels/TeslaWheels';\n\nclass TeslaBattery extends React.Component {\n    \n  constructor(props) {\n    super(props);\n    this.calculateStats = this.calculateStats.bind(this);\n    this.statsUpdate = this.statsUpdate.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.updateCounterState = this.updateCounterState.bind(this);\n    this.handleChangeClimate = this.handleChangeClimate.bind(this);\n    this.handleChangeWheels = this.handleChangeWheels.bind(this);\n    this.state = {\n      carstats: [],\n      config: {\n        speed: 55,\n        temperature: 20,\n        climate: true,\n        wheels: 19\n      }\n    }\n  }\n    \n    calculateStats = (models, value) => {\n        const dataModels = getModelData();\n        return models.map(model => {\n          // ES6 Object destructuring Syntax,\n          // takes out required values and create references to them\n          const { speed, temperature, climate, wheels } = value;\n          const miles = dataModels[model][wheels][climate ? 'on' : 'off'].speed[speed][temperature];\n          return {\n            model,\n            miles\n          };\n        });\n      }\n        \n      statsUpdate() {\n        const carModels = ['60', '60D', '75', '75D', '90D', 'P100D'];\n       // this.calculateStats = this.calculateStats.bind(this);\n       // this.statsUpdate = this.statsUpdate.bind(this);\n\n        // Fetch model info from BatteryService and calculate then update state\n        this.setState({\n          carstats: this.calculateStats(carModels, this.state.config)\n        })  \n      }\n        \n      componentDidMount() {\n        this.statsUpdate(); \n      }\n\n      updateCounterState(title, newValue) {\n        const config = { ...this.state.config };\n        // update config state with new value\n        title === 'Speed' ? config['speed'] = newValue : config['temperature'] = newValue;\n        // update our state\n        this.setState({ config }, () => {this.statusUpdate()});\n      }\n      increment(e, title) {\n        e.preventDefault();\n        let currentValue, maxValue, step;\n        const { speed, temperature } = this.props.counterDefaultVal;\n        if (title === 'Speed') {\n          currentValue = this.state.config.speed;\n          maxValue = speed.max;\n          step = speed.step;\n        } else {\n          currentValue = this.state.config.temperature;\n          maxValue = temperature.max;\n          step = temperature.step;\n        }\n        if (currentValue < maxValue) {\n          const newValue = currentValue + step;\n          this.updateCounterState(title, newValue);\n        }\n      }\n      decrement(e, title) {\n        e.preventDefault();\n        let currentValue, minValue, step;\n        const { speed, temperature } = this.props.counterDefaultVal;\n        if (title === 'Speed') {\n          currentValue = this.state.config.speed;\n          minValue = speed.min;\n          step = speed.step;\n        } else {\n          currentValue = this.state.config.temperature;\n          minValue = temperature.min;\n          step = temperature.step;\n        }\n        if (currentValue > minValue) {\n          const newValue = currentValue - step;\n          this.updateCounterState(title, newValue);\n        }\n      }  \n      //AC cool & heat\n      handleChangeClimate() {\n        const config = {...this.state.config};\n        config['climate'] = !this.state.config.climate;\n        this.setState({ config });\n      }\n      //wheel type\n      handleChangeWheels(size){\n        const config = {...this.state.config};\n        config['wheels']=size;\n        this.setState({ config });\n      }\n      render() {\n        const { config, carstats } = this.state;\t\n        return (\n            <form className=\"tesla-battery\">\n              <h1>Range Per Charge</h1>\n              <TeslaCar wheelsize={config.wheels} />\n              <TeslaStats carstats={carstats} />\n              <div className=\"tesla-controls cf\">\n                <TeslaCounter\n                  currentValue={this.state.config.speed}\n                  initValues={this.props.counterDefaultVal.speed}\n                  increment={this.increment}\n                  decrement={this.decrement}\n                />\n                <div className=\"tesla-climate-container cf\">\n                  <TeslaCounter\n                    currentValue={this.state.config.temperature}\n                    initValues={this.props.counterDefaultVal.temperature}\n                    increment={this.increment}\n                    decrement={this.decrement}\n                  />\n                  <TeslaClimate\n                    value={this.state.config.climate}\n                    limit={this.state.config.temperature > 10}\n                    handleChangeClimate={this.handleChangeClimate}\n                  /> \n                </div>\n                <TeslaWheels\n                    value={this.state.config.wheels}\n                    handleChangeWheels={this.handleChangeWheels}\n                  />\n              </div>\n              <TeslaNotice />\n          </form>\n        )\n      }\n}\nexport default TeslaBattery;"]},"metadata":{},"sourceType":"module"}